// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.test.suiswapexample.sui.contract.service;

import com.github.wubuku.sui.bean.*;
import com.github.wubuku.sui.utils.*;
import org.test.suiswapexample.domain.sellpool.*;
import org.test.suiswapexample.domain.*;
import org.test.suiswapexample.sui.contract.DomainBeanUtils;
import org.test.suiswapexample.sui.contract.SellPool;

import java.util.*;
import java.math.*;
import java.util.function.*;

public class SuiSellPoolStateRetriever {

    private SuiJsonRpcClient suiJsonRpcClient;

    private Function<String, SellPoolState.MutableSellPoolState> sellPoolStateFactory;

    public SuiSellPoolStateRetriever(SuiJsonRpcClient suiJsonRpcClient,
                                  Function<String, SellPoolState.MutableSellPoolState> sellPoolStateFactory
    ) {
        this.suiJsonRpcClient = suiJsonRpcClient;
        this.sellPoolStateFactory = sellPoolStateFactory;
    }

    public SellPoolState retrieveSellPoolState(String objectId) {
        SuiMoveObjectResponse<SellPool> getObjectDataResponse = suiJsonRpcClient.getMoveObject(
                objectId, new SuiObjectDataOptions(true, true, true, true, true, true, true), SellPool.class
        );
        if (getObjectDataResponse.getData() == null) {
            return null;
        }
        SellPool sellPool = getObjectDataResponse.getData().getContent().getFields();
        List<String> typeArgs = DomainBeanUtils.extractTypeArguments(getObjectDataResponse.getData().getContent().getType());
        return toSellPoolState(sellPool, typeArgs);
    }

    private SellPoolState toSellPoolState(SellPool sellPool , List<String> typeArgs) {
        SellPoolState.MutableSellPoolState sellPoolState = sellPoolStateFactory.apply(sellPool.getId().getId());
        sellPoolState.setVersion(sellPool.getVersion());
        sellPoolState.setX_Reserve(DomainBeanUtils.toObjectTable(sellPool.getX_Reserve()));
        sellPoolState.setX_Amounts(DomainBeanUtils.toTable(sellPool.getX_Amounts()));
        sellPoolState.setX_TotalAmount(sellPool.getX_TotalAmount());
        sellPoolState.setY_Reserve(sellPool.getY_Reserve());
        sellPoolState.setLiquidityTokenId(sellPool.getLiquidityTokenId());
        sellPoolState.setX_SoldAmount(sellPool.getX_SoldAmount());
        sellPoolState.setStartExchangeRateNumerator(sellPool.getStartExchangeRateNumerator());
        sellPoolState.setExchangeRateNumerator(sellPool.getExchangeRateNumerator());
        sellPoolState.setExchangeRateDenominator(sellPool.getExchangeRateDenominator());
        sellPoolState.setPriceCurveType(sellPool.getPriceCurveType());
        sellPoolState.setPriceDeltaX_Amount(sellPool.getPriceDeltaX_Amount());
        sellPoolState.setPriceDeltaNumerator(sellPool.getPriceDeltaNumerator());
        sellPoolState.setPriceDeltaDenominator(sellPool.getPriceDeltaDenominator());
        sellPoolState.setX_TokenType(typeArgs.get(0));
        sellPoolState.setY_TokenType(typeArgs.get(1));
        return sellPoolState;
    }

    
}

