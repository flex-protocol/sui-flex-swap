// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.test.suiswapexample.sui.contract.service;

import com.github.wubuku.sui.bean.*;
import com.github.wubuku.sui.utils.*;
import org.test.suiswapexample.domain.tradepool.*;
import org.test.suiswapexample.domain.*;
import org.test.suiswapexample.sui.contract.DomainBeanUtils;
import org.test.suiswapexample.sui.contract.TradePool;

import java.util.*;
import java.math.*;
import java.util.function.*;

public class SuiTradePoolStateRetriever {

    private SuiJsonRpcClient suiJsonRpcClient;

    private Function<String, TradePoolState.MutableTradePoolState> tradePoolStateFactory;

    public SuiTradePoolStateRetriever(SuiJsonRpcClient suiJsonRpcClient,
                                  Function<String, TradePoolState.MutableTradePoolState> tradePoolStateFactory
    ) {
        this.suiJsonRpcClient = suiJsonRpcClient;
        this.tradePoolStateFactory = tradePoolStateFactory;
    }

    public TradePoolState retrieveTradePoolState(String objectId) {
        SuiMoveObjectResponse<TradePool> getObjectDataResponse = suiJsonRpcClient.getMoveObject(
                objectId, new SuiObjectDataOptions(true, true, true, true, true, true, true), TradePool.class
        );
        if (getObjectDataResponse.getData() == null) {
            return null;
        }
        TradePool tradePool = getObjectDataResponse.getData().getContent().getFields();
        List<String> typeArgs = DomainBeanUtils.extractTypeArguments(getObjectDataResponse.getData().getContent().getType());
        return toTradePoolState(tradePool, typeArgs);
    }

    private TradePoolState toTradePoolState(TradePool tradePool , List<String> typeArgs) {
        TradePoolState.MutableTradePoolState tradePoolState = tradePoolStateFactory.apply(tradePool.getId().getId());
        tradePoolState.setVersion(tradePool.getVersion());
        tradePoolState.setPoolType(tradePool.getPoolType());
        tradePoolState.setX_Reserve(DomainBeanUtils.toObjectTable(tradePool.getX_Reserve()));
        tradePoolState.setX_Amounts(DomainBeanUtils.toTable(tradePool.getX_Amounts()));
        tradePoolState.setX_TotalAmount(tradePool.getX_TotalAmount());
        tradePoolState.setY_Reserve(tradePool.getY_Reserve());
        tradePoolState.setLiquidityTokenId(tradePool.getLiquidityTokenId());
        tradePoolState.setX_SoldAmount(tradePool.getX_SoldAmount());
        tradePoolState.setX_BoughtAmount(tradePool.getX_BoughtAmount());
        tradePoolState.setStartExchangeRateNumerator(tradePool.getStartExchangeRateNumerator());
        tradePoolState.setExchangeRateNumerator(tradePool.getExchangeRateNumerator());
        tradePoolState.setExchangeRateDenominator(tradePool.getExchangeRateDenominator());
        tradePoolState.setPriceCurveType(tradePool.getPriceCurveType());
        tradePoolState.setPriceDeltaX_Amount(tradePool.getPriceDeltaX_Amount());
        tradePoolState.setPriceDeltaNumerator(tradePool.getPriceDeltaNumerator());
        tradePoolState.setPriceDeltaDenominator(tradePool.getPriceDeltaDenominator());
        tradePoolState.setX_TokenType(typeArgs.get(0));
        tradePoolState.setY_TokenType(typeArgs.get(1));
        return tradePoolState;
    }

    
}

