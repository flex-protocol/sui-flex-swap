// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.test.suiswapexample.sui.contract.taskservice;

import org.test.suiswapexample.sui.contract.service.SellPoolEventService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Service;

@Service
public class PullSellPoolEventsTaskService {

    @Autowired
    private SellPoolEventService sellPoolEventService;

    @Scheduled(fixedDelayString = "${sui.contract.pull-sell-pool-events.sell-pool-initialized.fixed-delay:5000}")
    public void pullSellPoolInitializedEvents() {
        sellPoolEventService.pullSellPoolInitializedEvents();
    }

    @Scheduled(fixedDelayString = "${sui.contract.pull-sell-pool-events.sell-pool-exchange-rate-updated.fixed-delay:5000}")
    public void pullSellPoolExchangeRateUpdatedEvents() {
        sellPoolEventService.pullSellPoolExchangeRateUpdatedEvents();
    }

    @Scheduled(fixedDelayString = "${sui.contract.pull-sell-pool-events.sell-pool-x-token-added.fixed-delay:5000}")
    public void pullSellPoolXTokenAddedEvents() {
        sellPoolEventService.pullSellPoolXTokenAddedEvents();
    }

    @Scheduled(fixedDelayString = "${sui.contract.pull-sell-pool-events.sell-pool-x-token-removed.fixed-delay:5000}")
    public void pullSellPoolXTokenRemovedEvents() {
        sellPoolEventService.pullSellPoolXTokenRemovedEvents();
    }

    @Scheduled(fixedDelayString = "${sui.contract.pull-sell-pool-events.sell-pool-y-reserve-withdrawn.fixed-delay:5000}")
    public void pullSellPoolYReserveWithdrawnEvents() {
        sellPoolEventService.pullSellPoolYReserveWithdrawnEvents();
    }

    @Scheduled(fixedDelayString = "${sui.contract.pull-sell-pool-events.sell-pool-destroyed.fixed-delay:5000}")
    public void pullSellPoolDestroyedEvents() {
        sellPoolEventService.pullSellPoolDestroyedEvents();
    }

    @Scheduled(fixedDelayString = "${sui.contract.pull-sell-pool-events.sell-pool-y-swapped-for-x.fixed-delay:5000}")
    public void pullSellPoolYSwappedForXEvents() {
        sellPoolEventService.pullSellPoolYSwappedForXEvents();
    }

}
