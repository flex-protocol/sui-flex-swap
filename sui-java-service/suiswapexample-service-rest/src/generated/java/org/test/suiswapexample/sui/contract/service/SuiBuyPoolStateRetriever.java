// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.test.suiswapexample.sui.contract.service;

import com.github.wubuku.sui.bean.*;
import com.github.wubuku.sui.utils.*;
import org.test.suiswapexample.domain.buypool.*;
import org.test.suiswapexample.domain.*;
import org.test.suiswapexample.sui.contract.DomainBeanUtils;
import org.test.suiswapexample.sui.contract.BuyPool;

import java.util.*;
import java.math.*;
import java.util.function.*;

public class SuiBuyPoolStateRetriever {

    private SuiJsonRpcClient suiJsonRpcClient;

    private Function<String, BuyPoolState.MutableBuyPoolState> buyPoolStateFactory;

    public SuiBuyPoolStateRetriever(SuiJsonRpcClient suiJsonRpcClient,
                                  Function<String, BuyPoolState.MutableBuyPoolState> buyPoolStateFactory
    ) {
        this.suiJsonRpcClient = suiJsonRpcClient;
        this.buyPoolStateFactory = buyPoolStateFactory;
    }

    public BuyPoolState retrieveBuyPoolState(String objectId) {
        SuiMoveObjectResponse<BuyPool> getObjectDataResponse = suiJsonRpcClient.getMoveObject(
                objectId, new SuiObjectDataOptions(true, true, true, true, true, true, true), BuyPool.class
        );
        if (getObjectDataResponse.getData() == null) {
            return null;
        }
        BuyPool buyPool = getObjectDataResponse.getData().getContent().getFields();
        List<String> typeArgs = DomainBeanUtils.extractTypeArguments(getObjectDataResponse.getData().getContent().getType());
        return toBuyPoolState(buyPool, typeArgs);
    }

    private BuyPoolState toBuyPoolState(BuyPool buyPool , List<String> typeArgs) {
        BuyPoolState.MutableBuyPoolState buyPoolState = buyPoolStateFactory.apply(buyPool.getId().getId());
        buyPoolState.setVersion(buyPool.getVersion());
        buyPoolState.setX_Reserve(DomainBeanUtils.toObjectTable(buyPool.getX_Reserve()));
        buyPoolState.setX_Amounts(DomainBeanUtils.toTable(buyPool.getX_Amounts()));
        buyPoolState.setX_TotalAmount(buyPool.getX_TotalAmount());
        buyPoolState.setY_Reserve(buyPool.getY_Reserve());
        buyPoolState.setLiquidityTokenId(buyPool.getLiquidityTokenId());
        buyPoolState.setX_BoughtAmount(buyPool.getX_BoughtAmount());
        buyPoolState.setStartExchangeRateNumerator(buyPool.getStartExchangeRateNumerator());
        buyPoolState.setExchangeRateNumerator(buyPool.getExchangeRateNumerator());
        buyPoolState.setExchangeRateDenominator(buyPool.getExchangeRateDenominator());
        buyPoolState.setPriceCurveType(buyPool.getPriceCurveType());
        buyPoolState.setPriceDeltaX_Amount(buyPool.getPriceDeltaX_Amount());
        buyPoolState.setPriceDeltaNumerator(buyPool.getPriceDeltaNumerator());
        buyPoolState.setPriceDeltaDenominator(buyPool.getPriceDeltaDenominator());
        buyPoolState.setX_TokenType(typeArgs.get(0));
        buyPoolState.setY_TokenType(typeArgs.get(1));
        return buyPoolState;
    }

    
}

