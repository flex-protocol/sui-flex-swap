// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.test.suiswapexample.sui.contract.service;

import com.github.wubuku.sui.utils.SuiJsonRpcClient;
import org.test.suiswapexample.domain.*;
import org.test.suiswapexample.domain.tradepool.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import org.springframework.transaction.annotation.Transactional;

import java.util.*;
import java.math.*;

@Service
public class SuiTradePoolService {

    @Autowired
    private TradePoolStateRepository tradePoolStateRepository;

    private SuiTradePoolStateRetriever suiTradePoolStateRetriever;

    @Autowired
    public SuiTradePoolService(SuiJsonRpcClient suiJsonRpcClient) {
        this.suiTradePoolStateRetriever = new SuiTradePoolStateRetriever(suiJsonRpcClient,
                id -> {
                    TradePoolState.MutableTradePoolState s = new AbstractTradePoolState.SimpleTradePoolState();
                    s.setId(id);
                    return s;
                },
                (tradePoolState, key) -> (TradePoolX_ReserveItemState.MutableTradePoolX_ReserveItemState)
                        ((EntityStateCollection.ModifiableEntityStateCollection<String, TradePoolX_ReserveItemState>) tradePoolState.getTradePoolX_ReserveItems()).getOrAddDefault(key),
                (tradePoolState, key) -> (TradePoolX_AmountsItemState.MutableTradePoolX_AmountsItemState)
                        ((EntityStateCollection.ModifiableEntityStateCollection<String, TradePoolX_AmountsItemState>) tradePoolState.getTradePoolX_AmountsItems()).getOrAddDefault(key)
        );
    }

    @Transactional
    public void updateTradePoolState(String objectId) {
        TradePoolState tradePoolState = suiTradePoolStateRetriever.retrieveTradePoolState(objectId);
        if (tradePoolState == null) {
            return;
        }
        tradePoolStateRepository.merge(tradePoolState);
    }

    @Transactional
    public void deleteTradePool(String objectId) {
        TradePoolState.MutableTradePoolState s = (TradePoolState.MutableTradePoolState) tradePoolStateRepository.get(objectId, true);
        if (s != null) {
            s.setDeleted(true);
            tradePoolStateRepository.merge(s);
        }
    }

}

