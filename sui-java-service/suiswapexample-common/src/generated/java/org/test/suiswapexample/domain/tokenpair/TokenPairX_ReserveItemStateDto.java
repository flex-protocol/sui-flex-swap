// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.test.suiswapexample.domain.tokenpair;

import java.util.*;
import java.math.*;
import java.util.Date;
import org.test.suiswapexample.domain.*;
import org.test.suiswapexample.specialization.*;


public class TokenPairX_ReserveItemStateDto {

    private String key;

    public String getKey()
    {
        return this.key;
    }

    public void setKey(String key)
    {
        this.key = key;
    }

    private java.util.Map<String, Object> value;

    public java.util.Map<String, Object> getValue()
    {
        return this.value;
    }

    public void setValue(java.util.Map<String, Object> value)
    {
        this.value = value;
    }

    private Boolean active;

    public Boolean getActive()
    {
        return this.active;
    }

    public void setActive(Boolean active)
    {
        this.active = active;
    }

    private Long offChainVersion;

    public Long getOffChainVersion()
    {
        return this.offChainVersion;
    }

    public void setOffChainVersion(Long offChainVersion)
    {
        this.offChainVersion = offChainVersion;
    }

    private String tokenPairId;

    public String getTokenPairId()
    {
        return this.tokenPairId;
    }

    public void setTokenPairId(String tokenPairId)
    {
        this.tokenPairId = tokenPairId;
    }

    private String createdBy;

    public String getCreatedBy()
    {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy)
    {
        this.createdBy = createdBy;
    }

    private Date createdAt;

    public Date getCreatedAt()
    {
        return this.createdAt;
    }

    public void setCreatedAt(Date createdAt)
    {
        this.createdAt = createdAt;
    }

    private String updatedBy;

    public String getUpdatedBy()
    {
        return this.updatedBy;
    }

    public void setUpdatedBy(String updatedBy)
    {
        this.updatedBy = updatedBy;
    }

    private Date updatedAt;

    public Date getUpdatedAt()
    {
        return this.updatedAt;
    }

    public void setUpdatedAt(Date updatedAt)
    {
        this.updatedAt = updatedAt;
    }


    public static class DtoConverter extends AbstractStateDtoConverter
    {
        public static Collection<String> collectionFieldNames = Arrays.asList(new String[]{});

        @Override
        protected boolean isCollectionField(String fieldName) {
            return CollectionUtils.collectionContainsIgnoringCase(collectionFieldNames, fieldName);
        }

        public TokenPairX_ReserveItemStateDto[] toTokenPairX_ReserveItemStateDtoArray(Iterable<TokenPairX_ReserveItemState> states) {
            return toTokenPairX_ReserveItemStateDtoList(states).toArray(new TokenPairX_ReserveItemStateDto[0]);
        }

        public List<TokenPairX_ReserveItemStateDto> toTokenPairX_ReserveItemStateDtoList(Iterable<TokenPairX_ReserveItemState> states) {
            ArrayList<TokenPairX_ReserveItemStateDto> stateDtos = new ArrayList();
            for (TokenPairX_ReserveItemState s : states) {
                TokenPairX_ReserveItemStateDto dto = toTokenPairX_ReserveItemStateDto(s);
                stateDtos.add(dto);
            }
            return stateDtos;
        }

        public TokenPairX_ReserveItemStateDto toTokenPairX_ReserveItemStateDto(TokenPairX_ReserveItemState state)
        {
            if(state == null) {
                return null;
            }
            TokenPairX_ReserveItemStateDto dto = new TokenPairX_ReserveItemStateDto();
            if (returnedFieldsContains("Key")) {
                dto.setKey(state.getKey());
            }
            if (returnedFieldsContains("Value")) {
                dto.setValue(state.getValue());
            }
            if (returnedFieldsContains("Active")) {
                dto.setActive(state.getActive());
            }
            if (returnedFieldsContains("OffChainVersion")) {
                dto.setOffChainVersion(state.getOffChainVersion());
            }
            if (returnedFieldsContains("TokenPairId")) {
                dto.setTokenPairId(state.getTokenPairId());
            }
            if (returnedFieldsContains("CreatedBy")) {
                dto.setCreatedBy(state.getCreatedBy());
            }
            if (returnedFieldsContains("CreatedAt")) {
                dto.setCreatedAt(state.getCreatedAt());
            }
            if (returnedFieldsContains("UpdatedBy")) {
                dto.setUpdatedBy(state.getUpdatedBy());
            }
            if (returnedFieldsContains("UpdatedAt")) {
                dto.setUpdatedAt(state.getUpdatedAt());
            }
            return dto;
        }

    }
}

