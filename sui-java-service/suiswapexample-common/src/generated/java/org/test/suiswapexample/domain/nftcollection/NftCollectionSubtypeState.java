// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.test.suiswapexample.domain.nftcollection;

import java.util.*;
import java.math.*;
import java.util.Date;
import org.test.suiswapexample.domain.*;
import org.test.suiswapexample.specialization.Event;

public interface NftCollectionSubtypeState
{
    Long VERSION_ZERO = 0L;

    Long VERSION_NULL = VERSION_ZERO - 1;

    String getName();

    String getSubtypeValue();

    String getImageUrl();

    Long getOffChainVersion();

    String getCreatedBy();

    Date getCreatedAt();

    String getUpdatedBy();

    Date getUpdatedAt();

    Boolean getActive();

    Boolean getDeleted();

    String getNftCollectionCollectionType();

    interface MutableNftCollectionSubtypeState extends NftCollectionSubtypeState {
        void setName(String name);

        void setSubtypeValue(String subtypeValue);

        void setImageUrl(String imageUrl);

        void setOffChainVersion(Long offChainVersion);

        void setCreatedBy(String createdBy);

        void setCreatedAt(Date createdAt);

        void setUpdatedBy(String updatedBy);

        void setUpdatedAt(Date updatedAt);

        void setActive(Boolean active);

        void setDeleted(Boolean deleted);

        void setNftCollectionCollectionType(String nftCollectionCollectionType);


        void mutate(Event e);

        //void when(NftCollectionSubtypeEvent.NftCollectionSubtypeStateCreated e);

        //void when(NftCollectionSubtypeEvent.NftCollectionSubtypeStateMergePatched e);

        //void when(NftCollectionSubtypeEvent.NftCollectionSubtypeStateRemoved e);
    }

    interface SqlNftCollectionSubtypeState extends MutableNftCollectionSubtypeState {
        NftCollectionSubtypeId getNftCollectionSubtypeId();

        void setNftCollectionSubtypeId(NftCollectionSubtypeId nftCollectionSubtypeId);


        boolean isStateUnsaved();

        boolean getForReapplying();
    }
}

