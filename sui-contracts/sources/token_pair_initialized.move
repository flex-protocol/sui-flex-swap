// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

module sui_swap_example::token_pair_initialized {

    use std::option;
    use std::string::String;
    use sui::object::{Self, ID};
    use sui_swap_example::token_pair::{Self, TokenPairInitialized};

    public fun id(token_pair_initialized: &TokenPairInitialized): option::Option<object::ID> {
        token_pair::token_pair_initialized_id(token_pair_initialized)
    }

    public fun exchange_id(token_pair_initialized: &TokenPairInitialized): ID {
        token_pair::token_pair_initialized_exchange_id(token_pair_initialized)
    }

    public fun exchange_rate_numerator(token_pair_initialized: &TokenPairInitialized): u64 {
        token_pair::token_pair_initialized_exchange_rate_numerator(token_pair_initialized)
    }

    public fun exchange_rate_denominator(token_pair_initialized: &TokenPairInitialized): u64 {
        token_pair::token_pair_initialized_exchange_rate_denominator(token_pair_initialized)
    }

    public fun provider(token_pair_initialized: &TokenPairInitialized): address {
        token_pair::token_pair_initialized_provider(token_pair_initialized)
    }

    public fun x_token_type(token_pair_initialized: &TokenPairInitialized): String {
        token_pair::token_pair_initialized_x_token_type(token_pair_initialized)
    }

    public fun y_token_type(token_pair_initialized: &TokenPairInitialized): String {
        token_pair::token_pair_initialized_y_token_type(token_pair_initialized)
    }

    public fun x_amount(token_pair_initialized: &TokenPairInitialized): u64 {
        token_pair::token_pair_initialized_x_amount(token_pair_initialized)
    }

    public fun y_amount(token_pair_initialized: &TokenPairInitialized): u64 {
        token_pair::token_pair_initialized_y_amount(token_pair_initialized)
    }

    public fun liquidity_token_id(token_pair_initialized: &TokenPairInitialized): ID {
        token_pair::token_pair_initialized_liquidity_token_id(token_pair_initialized)
    }

}
