// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

module sui_swap_example::pool_x_swapped_for_y {

    use std::string::String;
    use sui::object::{Self, ID};
    use sui_swap_example::trade_pool::{Self, PoolXSwappedForY};

    public fun id(pool_x_swapped_for_y: &PoolXSwappedForY): object::ID {
        trade_pool::pool_x_swapped_for_y_id(pool_x_swapped_for_y)
    }

    public fun expected_y_amount_out(pool_x_swapped_for_y: &PoolXSwappedForY): u64 {
        trade_pool::pool_x_swapped_for_y_expected_y_amount_out(pool_x_swapped_for_y)
    }

    public fun sender(pool_x_swapped_for_y: &PoolXSwappedForY): address {
        trade_pool::pool_x_swapped_for_y_sender(pool_x_swapped_for_y)
    }

    public fun x_token_type(pool_x_swapped_for_y: &PoolXSwappedForY): String {
        trade_pool::pool_x_swapped_for_y_x_token_type(pool_x_swapped_for_y)
    }

    public fun y_token_type(pool_x_swapped_for_y: &PoolXSwappedForY): String {
        trade_pool::pool_x_swapped_for_y_y_token_type(pool_x_swapped_for_y)
    }

    public fun x_amount(pool_x_swapped_for_y: &PoolXSwappedForY): u64 {
        trade_pool::pool_x_swapped_for_y_x_amount(pool_x_swapped_for_y)
    }

    public fun y_amount(pool_x_swapped_for_y: &PoolXSwappedForY): u64 {
        trade_pool::pool_x_swapped_for_y_y_amount(pool_x_swapped_for_y)
    }

    public fun x_id(pool_x_swapped_for_y: &PoolXSwappedForY): ID {
        trade_pool::pool_x_swapped_for_y_x_id(pool_x_swapped_for_y)
    }

    public fun new_exchange_rate_numerator(pool_x_swapped_for_y: &PoolXSwappedForY): u64 {
        trade_pool::pool_x_swapped_for_y_new_exchange_rate_numerator(pool_x_swapped_for_y)
    }

}
