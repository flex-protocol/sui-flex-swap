// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

module sui_swap_example::liquidity_initialized {

    use std::option;
    use std::string::String;
    use sui::object::{Self, ID};
    use sui_swap_example::token_pair::{Self, LiquidityInitialized};

    public fun id(liquidity_initialized: &LiquidityInitialized): option::Option<object::ID> {
        token_pair::liquidity_initialized_id(liquidity_initialized)
    }

    public fun exchange_id(liquidity_initialized: &LiquidityInitialized): ID {
        token_pair::liquidity_initialized_exchange_id(liquidity_initialized)
    }

    public fun x_amount(liquidity_initialized: &LiquidityInitialized): u64 {
        token_pair::liquidity_initialized_x_amount(liquidity_initialized)
    }

    public fun fee_numerator(liquidity_initialized: &LiquidityInitialized): u64 {
        token_pair::liquidity_initialized_fee_numerator(liquidity_initialized)
    }

    public fun fee_denominator(liquidity_initialized: &LiquidityInitialized): u64 {
        token_pair::liquidity_initialized_fee_denominator(liquidity_initialized)
    }

    public fun provider(liquidity_initialized: &LiquidityInitialized): address {
        token_pair::liquidity_initialized_provider(liquidity_initialized)
    }

    public fun x_token_type(liquidity_initialized: &LiquidityInitialized): String {
        token_pair::liquidity_initialized_x_token_type(liquidity_initialized)
    }

    public fun y_token_type(liquidity_initialized: &LiquidityInitialized): String {
        token_pair::liquidity_initialized_y_token_type(liquidity_initialized)
    }

    public fun y_amount(liquidity_initialized: &LiquidityInitialized): u64 {
        token_pair::liquidity_initialized_y_amount(liquidity_initialized)
    }

    public fun liquidity_amount(liquidity_initialized: &LiquidityInitialized): u64 {
        token_pair::liquidity_initialized_liquidity_amount(liquidity_initialized)
    }

    public fun liquidity_token_id(liquidity_initialized: &LiquidityInitialized): ID {
        token_pair::liquidity_initialized_liquidity_token_id(liquidity_initialized)
    }

    public fun x_id(liquidity_initialized: &LiquidityInitialized): ID {
        token_pair::liquidity_initialized_x_id(liquidity_initialized)
    }

}
