// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

module sui_swap_core::nft_service {
    use sui_swap_core::nft_service_config::{Self, NftServiceConfig};

    friend sui_swap_core::token_pair_service_process;
    friend sui_swap_core::trade_pool_service_process;
    friend sui_swap_core::sell_pool_service_process;
    friend sui_swap_core::buy_pool_service_process;

    struct GetAmountRequest<X: key + store, C> {
        x: X,
        _get_amount_context: C,
    }

    struct GetAmountResponse<X: key + store, phantom WT, C> {
        result: u64,
        _get_amount_request: GetAmountRequest<X, C>,
    }

    public(friend) fun new_get_amount_request<X: key + store, C>(
        x: X,
        _get_amount_context: C,
    ): GetAmountRequest<X, C> {
        GetAmountRequest {
            x,
            _get_amount_context,
        }
    }

    public fun get_get_amount_request_all_parameters<X: key + store, C>(request: &GetAmountRequest<X, C>): &X {
        &request.x
    }

    public(friend) fun unpack_get_amount_request<X: key + store, C>(
        _get_amount_request: GetAmountRequest<X, C>,
    ): (X, C) {
        let GetAmountRequest {
            x,
            _get_amount_context,
        } = _get_amount_request;
        (x, _get_amount_context)
    }

    public fun new_get_amount_response<X: key + store, WT: drop, C>(
        config: &NftServiceConfig,
        _impl_witness: WT,
        result: u64,
        _get_amount_request: GetAmountRequest<X, C>,
    ): GetAmountResponse<X, WT, C> {
        nft_service_config::assert_allowlisted(config, _impl_witness);
        GetAmountResponse {
            result,
            _get_amount_request,
        }
    }

    public(friend) fun unpack_get_amount_respone<X: key + store, WT, C>(
        _get_amount_response: GetAmountResponse<X, WT, C>,
    ): (u64, GetAmountRequest<X, C>) {
        let GetAmountResponse {
            result,
            _get_amount_request,
        } = _get_amount_response;
        (result, _get_amount_request)
    }

}
//
// The boilerplate code that implements the interface:
//
/*
module xxx_package_id::xxx_nft_service_impl {
    use sui_swap_core::nft_service_config::{Self, NftServiceConfig};
    use sui_swap_core::nft_service;

    struct XxxNftServiceImpl has drop {}

    public fun get_amount<X: key + store, C>(config: &NftServiceConfig, get_amount_request: nft_service::GetAmountRequest<X, C>): nft_service::GetAmountResponse<X, XxxNftServiceImpl, C> {
        let x = nft_service::get_get_amount_request_all_parameters(&get_amount_request);
        //todo let result: u64 = ...
        nft_service::new_get_amount_response(
            config,
            XxxNftServiceImpl{},
            result,
            get_amount_request
        )
    }

}
*/
